{"componentChunkName":"component---src-pages-archive-js","path":"/archive/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2025-03-13","title":"ProductivityPulse","tech":["Java script","Node.js","React","Express","MongoDB","RESTFul APIs","Java Script","Html","CSS"],"github":"https://github.com/nikithabogala/lumaa-spring-2025-swe","external":"","company":""},"html":"<p>This project involved developing \"ProductivityPulse,\" a comprehensive task management application using a modern full-stack JavaScript architecture. The React frontend implements component-based UI design with custom hooks and Context API for efficient state management, delivering an intuitive drag-and-drop interface for task organization. The Node.js backend with Express provides RESTful API endpoints for complete CRUD operations, incorporating middleware for request validation and error handling. The application utilizes MongoDB for flexible document-based storage of tasks with their associated metadata, priorities, and relationships, while implementing JWT-based authentication to ensure secure user sessions and data privacy. Key features include customizable task categorization, deadline management with smart reminders, and priority-based filtering capabilities. The architecture employs a modular design pattern with clear separation between UI components, business logic, and data access layers, facilitating maintainability and enabling future feature extensions. This full-stack implementation demonstrates practical application of modern web development technologies, efficient state management, and secure data handling for personal productivity solutions.</p>"}},{"node":{"frontmatter":{"date":"2025-02-10","title":"Movie Search Application","tech":["C#","WCF","ASP.NET","XML","API Integration"],"github":"https://github.com/nikithabogala/EntertainmentApp","external":"","company":"Arizona State University"},"html":"<p>This project involved developing a responsive entertainment platform using ASP.NET MVC architecture and C# for seamless movie discovery and trailer streaming. Implementing modular Windows Communication Foundation (WCF) services with the Repository pattern enabled efficient data access abstraction and third-party API integration. The system features secure user authentication with password encryption and cookie-based session management, complemented by Role-Based Access Control (RBAC) for differentiated user and staff privileges. The application's N-tier architecture ensured clean separation of concerns, while asynchronous API calls delivered real-time movie information retrieval without compromising user experience. This comprehensive solution demonstrates practical implementation of modern web development principles, secure authentication systems, and effective integration with external media services.</p>"}},{"node":{"frontmatter":{"date":"2025-01-08","title":"Cloud Based Face Recognition Model","tech":["Python","AWS Ec2","AWS Lambda","AWS S3","AWS SQS","AWS ECR","AWS SimpleDB","FAST API","Pytorch","Docker"],"github":"https://github.com/nikithabogala/CloudComputing","external":"","company":"Arizona State University"},"html":"<p>This project involved building and deploying a high-performance, real-time face recognition system hosted on AWS. Utilizing FastAPI and Docker, the system achieved low-latency processing and dynamic scaling capabilities, similar to requirements found in high-speed financial platforms. Its fully containerized architecture employed AWS ECR for image storage and AWS Lambda for serverless function execution, complemented by auto-scaling logic to efficiently manage EC2 instance resources based on real-time workload demands.</p>"}},{"node":{"frontmatter":{"date":"2024-09-01","title":"Temporal Reasoning in LLMs","tech":["Python","Llama 3.1 8b","NLP","Inference Pipeline","Temporal Graphs"],"github":"https://github.com/nikithabogala/TempReason_Llama","external":"","company":"Arizona State University"},"html":"<p>Focused on advancing Large Language Models' understanding of time, this project developed a multi-step inference pipeline utilizing LLaMA 3.1. By integrating Chain-of-Thought (CoT) prompting, symbolic reasoning, and temporal graph construction, the system markedly improved the ability to accurately infer event sequences, durations, and dependencies from unstructured text. Robust preprocessing and evaluation techniques, measured by Exact Match and F1-scores, confirmed its superior performance over baseline models in complex temporal reasoning tasks.</p>"}},{"node":{"frontmatter":{"date":"2024-02-15","title":"Vehicle Registration Plates Recognition","tech":["Python","YOLOv8","easyOCR"],"github":"https://github.com/nikithabogala/Vehicle-Number-Plate-Recognition","external":"","company":"Arizona State University"},"html":"<p>This project involved developing an advanced Vehicle Number Plate Recognition system utilizing deep learning and computer vision techniques. Implementing YOLOv8's object detection capabilities enabled precise localization of license plates within complex traffic scenes with high accuracy across various lighting conditions and vehicle types. The multi-stage pipeline incorporated custom image segmentation algorithms to isolate and normalize detected plate regions, while integration with EasyOCR facilitated robust character recognition even with challenging fonts and partial occlusions. The system's modular architecture separated detection, segmentation, and recognition components, allowing for independent optimization of each stage and easier maintenance. Performance testing demonstrated reliable recognition in real-world scenarios, with the implementation showcasing practical applications of convolutional neural networks for automated vehicle identification in traffic management systems, parking solutions, and security applications. This project demonstrates effective application of computer vision principles and deep learning models to solve complex real-world image recognition challenges.</p>"}},{"node":{"frontmatter":{"date":"2024-01-08","title":"Monte Carlo Tree Search Pacman Agent","tech":["Python","Reinforcement Learning","MCTS Algorithm","AI"],"github":"https://github.com/nikithabogala/MonteCarloTreeSearch","external":"","company":"Arizona State University"},"html":"<p>This project involved developing a sophisticated Monte Carlo Tree Search (MCTS) agent designed to master the game of Pacman. Initially relying on random policy simulations, the agent was significantly enhanced by incorporating an evaluation function, enabling more strategic action choices. Tested across diverse Pacman environments featuring varied layouts and ghost behaviors, both the basic and enhanced MCTS agents statistically demonstrated superior performance in scores and win rates compared to traditional depth-limited Alpha-Beta and Expectimax agents.</p>"}},{"node":{"frontmatter":{"date":"2020-03-03","title":"Text Search Engine","tech":["Python","Tf-IDF","Cosine Similarity"],"github":"","external":"","company":"Chaitanya Bharathi Institute of Technology"},"html":"<p>Developed a text search engine utilizing core information retrieval techniques like inverted indexing and TF-IDF weighting. The engine effectively ranked search results based on cosine similarity and included support for precise phrase searching, optimized for high-speed query execution and text retrieval.</p>"}}]}},"pageContext":{}},"staticQueryHashes":["3115057458"]}